###
# INDEX CREATION
###

# Delete (if exists)
DELETE workshop_test

# Create an index with geo_point field
PUT workshop_test
{
  "settings": {
    "number_of_replicas": 1,
    "number_of_shards": 1
  },
  "mappings":{
    "properties": {
      "location": {
        "type": "geo_point"
      },
      "category": {
        "type": "keyword"
      },
      "title": {
        "type": "text"
      }
    }
  }
}

# Add point using string 
POST workshop_test/_doc/1
{
  "location": "41.12,-71.34",
  "category": "place name",
  "title": "Null Island"
}

# Add point using geohash
POST workshop_test/_doc/2
{
  "location": "drm3btev3e86",
  "category": "place name 2",
  "title": "Somewhere"
}

# Add point using array
POST workshop_test/_doc/3
{
  "location": [ -71.34, 41.12 ] ,
  "category": "place name 3",
  "title": "Somewhere 3"
}

# Add point using an object
POST workshop_test/_doc/4
{
  "location": {
      "lat": 41.12,
      "lon": -71.34
  } ,
  "category": "place name 4",
  "title": "Somewhere 4"
}

# Data count
GET workshop_test/_count

# Get the first documents
GET workshop_test/_search

# Create an airports index
PUT workshop_airports
{
    "mappings": {
        "properties": {
            "coords": {
                "type": "geo_point"
            },
            "abbrev": {
                "type": "keyword"
            },
            "name": {
                "type": "text"
            },
            "type": {
                "type": "keyword"
            }
        }
    }
}

# Bulk data insert
PUT _bulk
{"index":{"_index":"workshop_airports","_id":"1"}}
{"coords":[75.9570722,30.8503599],"name":"Sahnewal","abbrev":"LUH","type":"small"}
{"index":{"_index":"workshop_airports","_id":"2"}}
{"coords":[75.9330598,17.6254152],"name":"Solapur","abbrev":"SSE","type":"mid"}
{"index":{"_index":"workshop_airports","_id":"3"}}
{"coords":[85.323597,23.3177246],"name":"Birsa Munda","abbrev":"IXR","type":"mid"}
{"index":{"_index":"workshop_airports","_id":"4"}}
{"coords":[48.7471065,31.3431586],"name":"Ahwaz","abbrev":"AWZ","type":"mid"}
{"index":{"_index":"workshop_airports","_id":"5"}}
{"coords":[78.2172187,26.2854877],"name":"Gwalior","abbrev":"GWL","type":"mid and military"}
{"index":{"_index":"workshop_airports","_id":"6"}}
{"coords":[42.9710963,14.7552534],"name":"Hodeidah Int'l","abbrev":"HOD","type":"mid"}
{"index":{"_index":"workshop_airports","_id":"7"}}
{"coords":[75.8092915,22.7277492],"name":"Devi Ahilyabai Holkar Int'l","abbrev":"IDR","type":"mid"}
{"index":{"_index":"workshop_airports","_id":"8"}}
{"coords":[73.8105675,19.9660206],"name":"Gandhinagar","abbrev":"ISK","type":"mid"}
{"index":{"_index":"workshop_airports","_id":"9"}}
{"coords":[76.8017261,30.6707249],"name":"Chandigarh Int'l","abbrev":"IXC","type":"major and military"}
{"index":{"_index":"workshop_airports","_id":"10"}}
{"coords":[75.3958433,19.867297],"name":"Aurangabad","abbrev":"IXU","type":"mid"}

###
# QUERYING
###

# Search with sorting, and only projecting
# a few fields
GET flight_tracking*/_search
{
  "size": 5,
  "_source": ["timePosition", "callsign", "location", "velocity"],
  "query":{
    "bool": {
      "filter": {
        "term": {
          "originCountry": "China"
        }
      }
    }
  },
  "sort": [
    {
      "timePosition": "desc"
    }
  ]
}

# Just get a count of a query
GET flight_tracking*/_count
{
  "query":{
    "bool": {
      "filter": {
        "term": {
          "originCountry": "China"
        }
      }
    }
  }
}

# Wildcard query
GET flight_tracking*/_search
{
  "query": {
    "query_string": {
            "query" : "RYR* OR ACA*",
            "default_field" : "callsign"
    }
  }
}

# Bool query and filter
GET flight_tracking*/_search
{
  "_source": [ "callsign", "timePosition", "onGround" ],
  "query": {
    "bool": {
      "must": [
        {
          "query_string": {
            "query": "RYR*",
            "default_field": "callsign"
          }
        }
      ],
      "filter": [
        { "term": { "onGround": "true" } },
        { "range": { "timePosition": { "gte": "now-1d/h" } } }
      ]
    }
  }
}

###
# AGGREGATIONS
###

# Metric and bucket agg, with filter query
GET flight_tracking*/_search
{
  "size": 0,
  "query": {
    "bool": {
      "filter": [
        { "term": { "onGround": "false" } },
        { "range": { "timePosition": { "gte": "now-30m/m" } } },
        { "range": { "geoAltitude": { "gte": 0 } } }
      ]
    }
  },
  "aggs": {
    "avg_speed": { "avg": { "field": "velocity" } },
    "geoAltitude_stats": { "stats": { "field": "geoAltitude" } },
    "altitude_percentiles": {
      "percentiles": {
        "field": "geoAltitude",
        "percents": [ 0, 5, 10, 25, 50, 75, 90, 95, 100 ]
      }
    },
    "positions_over_time": {
      "date_histogram": {
        "field": "timePosition",
        "fixed_interval": "10m"
      }
    },
    "speed_histogram": {
      "histogram": {
        "field": "velocity",
        "interval": 50
      }
    }
  }
}
